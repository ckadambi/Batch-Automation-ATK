name: ci

on:
  push:
  pull_request:

# Needed so the summary can be posted to Checks / PRs
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore ./BatchValidatorMockTest.sln

      - name: Build (Release)
        run: dotnet build ./BatchValidatorMockTest.sln -c Release --no-restore

  BatchJobTestResults:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Uses coverlet.collector (add it to your test csproj) to emit Cobertura coverage
      - name: Test (TRX + Cobertura coverage)
        run: |
          dotnet test ./BatchValidatorMockTest.sln -c Release \
            --logger "console;verbosity=normal" \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage"

      - name: Upload test results (TRX)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/TestResults/*.trx
            **/test-results.trx

      - name: Upload coverage (Cobertura)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            **/TestResults/*/coverage.cobertura.xml

        # Adds the job summary with Total / Passed / Failed / Skipped
      - name: Publish Test Summary (TRX)
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            **/TestResults/*.trx
            **/test-results.trx
          check_name: "Batch Job Test Results"
          comment_mode: off          # set to "changes" if you want PR comments only on changes
          fail_on: nothing           # do not fail this step; rely on 'dotnet test' to fail the job
